{"ast":null,"code":"module.exports = function load(src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var script = document.createElement('script');\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  opts = opts || {};\n  cb = cb || function () {};\n  script.type = opts.type || 'text/javascript';\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true;\n  script.src = src;\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs);\n  }\n  if (opts.text) {\n    script.text = '' + opts.text;\n  }\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd;\n  onend(script, cb);\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n  head.appendChild(script);\n};\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\nfunction stdOnEnd(script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null;\n    cb(null, script);\n  };\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null;\n    cb(new Error('Failed to load ' + this.src), script);\n  };\n}\nfunction ieOnEnd(script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return;\n    this.onreadystatechange = null;\n    cb(null, script); // there is no way to catch loading errors in IE8\n  };\n}","map":{"version":3,"names":["module","exports","load","src","opts","cb","head","document","getElementsByTagName","script","createElement","type","charset","async","attrs","setAttributes","text","onend","stdOnEnd","ieOnEnd","onload","appendChild","attr","setAttribute","onerror","Error","onreadystatechange","readyState"],"sources":["/home/winston/Documents/Projects/portfolio/portfolio/node_modules/load-script/index.js"],"sourcesContent":["\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n"],"mappings":"AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAAEC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;EAC7C,IAAIC,IAAI,GAAGC,QAAQ,CAACD,IAAI,IAAIC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACpE,IAAIC,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;EAE7C,IAAI,OAAON,IAAI,KAAK,UAAU,EAAE;IAC9BC,EAAE,GAAGD,IAAI;IACTA,IAAI,GAAG,CAAC,CAAC;EACX;EAEAA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjBC,EAAE,GAAGA,EAAE,IAAI,YAAW,CAAC,CAAC;EAExBI,MAAM,CAACE,IAAI,GAAGP,IAAI,CAACO,IAAI,IAAI,iBAAiB;EAC5CF,MAAM,CAACG,OAAO,GAAGR,IAAI,CAACQ,OAAO,IAAI,MAAM;EACvCH,MAAM,CAACI,KAAK,GAAG,OAAO,IAAIT,IAAI,GAAG,CAAC,CAACA,IAAI,CAACS,KAAK,GAAG,IAAI;EACpDJ,MAAM,CAACN,GAAG,GAAGA,GAAG;EAEhB,IAAIC,IAAI,CAACU,KAAK,EAAE;IACdC,aAAa,CAACN,MAAM,EAAEL,IAAI,CAACU,KAAK,CAAC;EACnC;EAEA,IAAIV,IAAI,CAACY,IAAI,EAAE;IACbP,MAAM,CAACO,IAAI,GAAG,EAAE,GAAGZ,IAAI,CAACY,IAAI;EAC9B;EAEA,IAAIC,KAAK,GAAG,QAAQ,IAAIR,MAAM,GAAGS,QAAQ,GAAGC,OAAO;EACnDF,KAAK,CAACR,MAAM,EAAEJ,EAAE,CAAC;;EAEjB;EACA;EACA;EACA,IAAI,CAACI,MAAM,CAACW,MAAM,EAAE;IAClBF,QAAQ,CAACT,MAAM,EAAEJ,EAAE,CAAC;EACtB;EAEAC,IAAI,CAACe,WAAW,CAACZ,MAAM,CAAC;AAC1B,CAAC;AAED,SAASM,aAAaA,CAACN,MAAM,EAAEK,KAAK,EAAE;EACpC,KAAK,IAAIQ,IAAI,IAAIR,KAAK,EAAE;IACtBL,MAAM,CAACc,YAAY,CAACD,IAAI,EAAER,KAAK,CAACQ,IAAI,CAAC,CAAC;EACxC;AACF;AAEA,SAASJ,QAAQA,CAAET,MAAM,EAAEJ,EAAE,EAAE;EAC7BI,MAAM,CAACW,MAAM,GAAG,YAAY;IAC1B,IAAI,CAACI,OAAO,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI;IACjCf,EAAE,CAAC,IAAI,EAAEI,MAAM,CAAC;EAClB,CAAC;EACDA,MAAM,CAACe,OAAO,GAAG,YAAY;IAC3B;IACA;IACA,IAAI,CAACA,OAAO,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI;IACjCf,EAAE,CAAC,IAAIoB,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAACtB,GAAG,CAAC,EAAEM,MAAM,CAAC;EACrD,CAAC;AACH;AAEA,SAASU,OAAOA,CAAEV,MAAM,EAAEJ,EAAE,EAAE;EAC5BI,MAAM,CAACiB,kBAAkB,GAAG,YAAY;IACtC,IAAI,IAAI,CAACC,UAAU,IAAI,UAAU,IAAI,IAAI,CAACA,UAAU,IAAI,QAAQ,EAAE;IAClE,IAAI,CAACD,kBAAkB,GAAG,IAAI;IAC9BrB,EAAE,CAAC,IAAI,EAAEI,MAAM,CAAC,EAAC;EACnB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}